// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoClient_10100.proto

#ifndef PROTOBUF_INCLUDED_ProtoClient_5f10100_2eproto
#define PROTOBUF_INCLUDED_ProtoClient_5f10100_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ProtoPublic.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ProtoClient_5f10100_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_ProtoClient_5f10100_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_ProtoClient_5f10100_2eproto();
class Proto10100001;
class Proto10100001DefaultTypeInternal;
extern Proto10100001DefaultTypeInternal _Proto10100001_default_instance_;
class Proto10100002;
class Proto10100002DefaultTypeInternal;
extern Proto10100002DefaultTypeInternal _Proto10100002_default_instance_;
class Proto10100003;
class Proto10100003DefaultTypeInternal;
extern Proto10100003DefaultTypeInternal _Proto10100003_default_instance_;
class Proto10100004;
class Proto10100004DefaultTypeInternal;
extern Proto10100004DefaultTypeInternal _Proto10100004_default_instance_;
class Proto50100001;
class Proto50100001DefaultTypeInternal;
extern Proto50100001DefaultTypeInternal _Proto50100001_default_instance_;
class Proto50100002;
class Proto50100002DefaultTypeInternal;
extern Proto50100002DefaultTypeInternal _Proto50100002_default_instance_;
class Proto50100003;
class Proto50100003DefaultTypeInternal;
extern Proto50100003DefaultTypeInternal _Proto50100003_default_instance_;
namespace google {
namespace protobuf {
template<> ::Proto10100001* Arena::CreateMaybeMessage<::Proto10100001>(Arena*);
template<> ::Proto10100002* Arena::CreateMaybeMessage<::Proto10100002>(Arena*);
template<> ::Proto10100003* Arena::CreateMaybeMessage<::Proto10100003>(Arena*);
template<> ::Proto10100004* Arena::CreateMaybeMessage<::Proto10100004>(Arena*);
template<> ::Proto50100001* Arena::CreateMaybeMessage<::Proto50100001>(Arena*);
template<> ::Proto50100002* Arena::CreateMaybeMessage<::Proto50100002>(Arena*);
template<> ::Proto50100003* Arena::CreateMaybeMessage<::Proto50100003>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class Proto10100001 :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto10100001) */ {
 public:
  Proto10100001();
  virtual ~Proto10100001();

  Proto10100001(const Proto10100001& from);

  inline Proto10100001& operator=(const Proto10100001& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Proto10100001(Proto10100001&& from) noexcept
    : Proto10100001() {
    *this = ::std::move(from);
  }

  inline Proto10100001& operator=(Proto10100001&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Proto10100001& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Proto10100001* internal_default_instance() {
    return reinterpret_cast<const Proto10100001*>(
               &_Proto10100001_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Proto10100001* other);
  friend void swap(Proto10100001& a, Proto10100001& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Proto10100001* New() const final {
    return CreateMaybeMessage<Proto10100001>(nullptr);
  }

  Proto10100001* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Proto10100001>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Proto10100001& from);
  void MergeFrom(const Proto10100001& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Proto10100001* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string tick = 2;
  bool has_tick() const;
  void clear_tick();
  static const int kTickFieldNumber = 2;
  const ::std::string& tick() const;
  void set_tick(const ::std::string& value);
  #if LANG_CXX11
  void set_tick(::std::string&& value);
  #endif
  void set_tick(const char* value);
  void set_tick(const char* value, size_t size);
  ::std::string* mutable_tick();
  ::std::string* release_tick();
  void set_allocated_tick(::std::string* tick);

  // optional string session = 3;
  bool has_session() const;
  void clear_session();
  static const int kSessionFieldNumber = 3;
  const ::std::string& session() const;
  void set_session(const ::std::string& value);
  #if LANG_CXX11
  void set_session(::std::string&& value);
  #endif
  void set_session(const char* value);
  void set_session(const char* value, size_t size);
  ::std::string* mutable_session();
  ::std::string* release_session();
  void set_allocated_session(::std::string* session);

  // optional string server_flag = 4;
  bool has_server_flag() const;
  void clear_server_flag();
  static const int kServerFlagFieldNumber = 4;
  const ::std::string& server_flag() const;
  void set_server_flag(const ::std::string& value);
  #if LANG_CXX11
  void set_server_flag(::std::string&& value);
  #endif
  void set_server_flag(const char* value);
  void set_server_flag(const char* value, size_t size);
  ::std::string* mutable_server_flag();
  ::std::string* release_server_flag();
  void set_allocated_server_flag(::std::string* server_flag);

  // optional string server_name = 5;
  bool has_server_name() const;
  void clear_server_name();
  static const int kServerNameFieldNumber = 5;
  const ::std::string& server_name() const;
  void set_server_name(const ::std::string& value);
  #if LANG_CXX11
  void set_server_name(::std::string&& value);
  #endif
  void set_server_name(const char* value);
  void set_server_name(const char* value, size_t size);
  ::std::string* mutable_server_name();
  ::std::string* release_server_name();
  void set_allocated_server_name(::std::string* server_name);

  // optional string agent = 6;
  bool has_agent() const;
  void clear_agent();
  static const int kAgentFieldNumber = 6;
  const ::std::string& agent() const;
  void set_agent(const ::std::string& value);
  #if LANG_CXX11
  void set_agent(::std::string&& value);
  #endif
  void set_agent(const char* value);
  void set_agent(const char* value, size_t size);
  ::std::string* mutable_agent();
  ::std::string* release_agent();
  void set_allocated_agent(::std::string* agent);

  // optional string net_type = 8;
  bool has_net_type() const;
  void clear_net_type();
  static const int kNetTypeFieldNumber = 8;
  const ::std::string& net_type() const;
  void set_net_type(const ::std::string& value);
  #if LANG_CXX11
  void set_net_type(::std::string&& value);
  #endif
  void set_net_type(const char* value);
  void set_net_type(const char* value, size_t size);
  ::std::string* mutable_net_type();
  ::std::string* release_net_type();
  void set_allocated_net_type(::std::string* net_type);

  // optional string sys_version = 9;
  bool has_sys_version() const;
  void clear_sys_version();
  static const int kSysVersionFieldNumber = 9;
  const ::std::string& sys_version() const;
  void set_sys_version(const ::std::string& value);
  #if LANG_CXX11
  void set_sys_version(::std::string&& value);
  #endif
  void set_sys_version(const char* value);
  void set_sys_version(const char* value, size_t size);
  ::std::string* mutable_sys_version();
  ::std::string* release_sys_version();
  void set_allocated_sys_version(::std::string* sys_version);

  // optional string sys_model = 10;
  bool has_sys_model() const;
  void clear_sys_model();
  static const int kSysModelFieldNumber = 10;
  const ::std::string& sys_model() const;
  void set_sys_model(const ::std::string& value);
  #if LANG_CXX11
  void set_sys_model(::std::string&& value);
  #endif
  void set_sys_model(const char* value);
  void set_sys_model(const char* value, size_t size);
  ::std::string* mutable_sys_model();
  ::std::string* release_sys_model();
  void set_allocated_sys_model(::std::string* sys_model);

  // optional string mac = 11;
  bool has_mac() const;
  void clear_mac();
  static const int kMacFieldNumber = 11;
  const ::std::string& mac() const;
  void set_mac(const ::std::string& value);
  #if LANG_CXX11
  void set_mac(::std::string&& value);
  #endif
  void set_mac(const char* value);
  void set_mac(const char* value, size_t size);
  ::std::string* mutable_mac();
  ::std::string* release_mac();
  void set_allocated_mac(::std::string* mac);

  // optional string sdk_sid = 13;
  bool has_sdk_sid() const;
  void clear_sdk_sid();
  static const int kSdkSidFieldNumber = 13;
  const ::std::string& sdk_sid() const;
  void set_sdk_sid(const ::std::string& value);
  #if LANG_CXX11
  void set_sdk_sid(::std::string&& value);
  #endif
  void set_sdk_sid(const char* value);
  void set_sdk_sid(const char* value, size_t size);
  ::std::string* mutable_sdk_sid();
  ::std::string* release_sdk_sid();
  void set_allocated_sdk_sid(::std::string* sdk_sid);

  // optional string msg_tocken = 14;
  bool has_msg_tocken() const;
  void clear_msg_tocken();
  static const int kMsgTockenFieldNumber = 14;
  const ::std::string& msg_tocken() const;
  void set_msg_tocken(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_tocken(::std::string&& value);
  #endif
  void set_msg_tocken(const char* value);
  void set_msg_tocken(const char* value, size_t size);
  ::std::string* mutable_msg_tocken();
  ::std::string* release_msg_tocken();
  void set_allocated_msg_tocken(::std::string* msg_tocken);

  // optional int32 market = 7;
  bool has_market() const;
  void clear_market();
  static const int kMarketFieldNumber = 7;
  ::google::protobuf::int32 market() const;
  void set_market(::google::protobuf::int32 value);

  // optional int32 client_type = 12;
  bool has_client_type() const;
  void clear_client_type();
  static const int kClientTypeFieldNumber = 12;
  ::google::protobuf::int32 client_type() const;
  void set_client_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Proto10100001)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr tick_;
  ::google::protobuf::internal::ArenaStringPtr session_;
  ::google::protobuf::internal::ArenaStringPtr server_flag_;
  ::google::protobuf::internal::ArenaStringPtr server_name_;
  ::google::protobuf::internal::ArenaStringPtr agent_;
  ::google::protobuf::internal::ArenaStringPtr net_type_;
  ::google::protobuf::internal::ArenaStringPtr sys_version_;
  ::google::protobuf::internal::ArenaStringPtr sys_model_;
  ::google::protobuf::internal::ArenaStringPtr mac_;
  ::google::protobuf::internal::ArenaStringPtr sdk_sid_;
  ::google::protobuf::internal::ArenaStringPtr msg_tocken_;
  ::google::protobuf::int32 market_;
  ::google::protobuf::int32 client_type_;
  friend struct ::TableStruct_ProtoClient_5f10100_2eproto;
};
// -------------------------------------------------------------------

class Proto50100001 :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto50100001) */ {
 public:
  Proto50100001();
  virtual ~Proto50100001();

  Proto50100001(const Proto50100001& from);

  inline Proto50100001& operator=(const Proto50100001& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Proto50100001(Proto50100001&& from) noexcept
    : Proto50100001() {
    *this = ::std::move(from);
  }

  inline Proto50100001& operator=(Proto50100001&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Proto50100001& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Proto50100001* internal_default_instance() {
    return reinterpret_cast<const Proto50100001*>(
               &_Proto50100001_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Proto50100001* other);
  friend void swap(Proto50100001& a, Proto50100001& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Proto50100001* New() const final {
    return CreateMaybeMessage<Proto50100001>(nullptr);
  }

  Proto50100001* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Proto50100001>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Proto50100001& from);
  void MergeFrom(const Proto50100001& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Proto50100001* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoGateRole role_list = 1;
  int role_list_size() const;
  void clear_role_list();
  static const int kRoleListFieldNumber = 1;
  ::ProtoGateRole* mutable_role_list(int index);
  ::google::protobuf::RepeatedPtrField< ::ProtoGateRole >*
      mutable_role_list();
  const ::ProtoGateRole& role_list(int index) const;
  ::ProtoGateRole* add_role_list();
  const ::google::protobuf::RepeatedPtrField< ::ProtoGateRole >&
      role_list() const;

  // @@protoc_insertion_point(class_scope:Proto50100001)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoGateRole > role_list_;
  friend struct ::TableStruct_ProtoClient_5f10100_2eproto;
};
// -------------------------------------------------------------------

class Proto10100002 :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto10100002) */ {
 public:
  Proto10100002();
  virtual ~Proto10100002();

  Proto10100002(const Proto10100002& from);

  inline Proto10100002& operator=(const Proto10100002& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Proto10100002(Proto10100002&& from) noexcept
    : Proto10100002() {
    *this = ::std::move(from);
  }

  inline Proto10100002& operator=(Proto10100002&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Proto10100002& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Proto10100002* internal_default_instance() {
    return reinterpret_cast<const Proto10100002*>(
               &_Proto10100002_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Proto10100002* other);
  friend void swap(Proto10100002& a, Proto10100002& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Proto10100002* New() const final {
    return CreateMaybeMessage<Proto10100002>(nullptr);
  }

  Proto10100002* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Proto10100002>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Proto10100002& from);
  void MergeFrom(const Proto10100002& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Proto10100002* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sex = 1;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 1;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Proto10100002)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 sex_;
  friend struct ::TableStruct_ProtoClient_5f10100_2eproto;
};
// -------------------------------------------------------------------

class Proto50100002 :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto50100002) */ {
 public:
  Proto50100002();
  virtual ~Proto50100002();

  Proto50100002(const Proto50100002& from);

  inline Proto50100002& operator=(const Proto50100002& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Proto50100002(Proto50100002&& from) noexcept
    : Proto50100002() {
    *this = ::std::move(from);
  }

  inline Proto50100002& operator=(Proto50100002&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Proto50100002& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Proto50100002* internal_default_instance() {
    return reinterpret_cast<const Proto50100002*>(
               &_Proto50100002_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Proto50100002* other);
  friend void swap(Proto50100002& a, Proto50100002& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Proto50100002* New() const final {
    return CreateMaybeMessage<Proto50100002>(nullptr);
  }

  Proto50100002* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Proto50100002>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Proto50100002& from);
  void MergeFrom(const Proto50100002& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Proto50100002* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Proto50100002)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct ::TableStruct_ProtoClient_5f10100_2eproto;
};
// -------------------------------------------------------------------

class Proto10100003 :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto10100003) */ {
 public:
  Proto10100003();
  virtual ~Proto10100003();

  Proto10100003(const Proto10100003& from);

  inline Proto10100003& operator=(const Proto10100003& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Proto10100003(Proto10100003&& from) noexcept
    : Proto10100003() {
    *this = ::std::move(from);
  }

  inline Proto10100003& operator=(Proto10100003&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Proto10100003& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Proto10100003* internal_default_instance() {
    return reinterpret_cast<const Proto10100003*>(
               &_Proto10100003_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Proto10100003* other);
  friend void swap(Proto10100003& a, Proto10100003& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Proto10100003* New() const final {
    return CreateMaybeMessage<Proto10100003>(nullptr);
  }

  Proto10100003* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Proto10100003>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Proto10100003& from);
  void MergeFrom(const Proto10100003& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Proto10100003* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 sex = 2;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 2;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional int32 career = 3;
  bool has_career() const;
  void clear_career();
  static const int kCareerFieldNumber = 3;
  ::google::protobuf::int32 career() const;
  void set_career(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Proto10100003)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 career_;
  friend struct ::TableStruct_ProtoClient_5f10100_2eproto;
};
// -------------------------------------------------------------------

class Proto50100003 :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto50100003) */ {
 public:
  Proto50100003();
  virtual ~Proto50100003();

  Proto50100003(const Proto50100003& from);

  inline Proto50100003& operator=(const Proto50100003& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Proto50100003(Proto50100003&& from) noexcept
    : Proto50100003() {
    *this = ::std::move(from);
  }

  inline Proto50100003& operator=(Proto50100003&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Proto50100003& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Proto50100003* internal_default_instance() {
    return reinterpret_cast<const Proto50100003*>(
               &_Proto50100003_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Proto50100003* other);
  friend void swap(Proto50100003& a, Proto50100003& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Proto50100003* New() const final {
    return CreateMaybeMessage<Proto50100003>(nullptr);
  }

  Proto50100003* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Proto50100003>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Proto50100003& from);
  void MergeFrom(const Proto50100003& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Proto50100003* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string role_name = 2;
  bool has_role_name() const;
  void clear_role_name();
  static const int kRoleNameFieldNumber = 2;
  const ::std::string& role_name() const;
  void set_role_name(const ::std::string& value);
  #if LANG_CXX11
  void set_role_name(::std::string&& value);
  #endif
  void set_role_name(const char* value);
  void set_role_name(const char* value, size_t size);
  ::std::string* mutable_role_name();
  ::std::string* release_role_name();
  void set_allocated_role_name(::std::string* role_name);

  // optional int64 role_id = 1;
  bool has_role_id() const;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::int64 role_id() const;
  void set_role_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Proto50100003)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr role_name_;
  ::google::protobuf::int64 role_id_;
  friend struct ::TableStruct_ProtoClient_5f10100_2eproto;
};
// -------------------------------------------------------------------

class Proto10100004 :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto10100004) */ {
 public:
  Proto10100004();
  virtual ~Proto10100004();

  Proto10100004(const Proto10100004& from);

  inline Proto10100004& operator=(const Proto10100004& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Proto10100004(Proto10100004&& from) noexcept
    : Proto10100004() {
    *this = ::std::move(from);
  }

  inline Proto10100004& operator=(Proto10100004&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Proto10100004& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Proto10100004* internal_default_instance() {
    return reinterpret_cast<const Proto10100004*>(
               &_Proto10100004_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Proto10100004* other);
  friend void swap(Proto10100004& a, Proto10100004& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Proto10100004* New() const final {
    return CreateMaybeMessage<Proto10100004>(nullptr);
  }

  Proto10100004* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Proto10100004>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Proto10100004& from);
  void MergeFrom(const Proto10100004& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Proto10100004* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 role_id = 1;
  bool has_role_id() const;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::int64 role_id() const;
  void set_role_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Proto10100004)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 role_id_;
  friend struct ::TableStruct_ProtoClient_5f10100_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Proto10100001

// optional string account = 1;
inline bool Proto10100001::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto10100001::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Proto10100001::account() const {
  // @@protoc_insertion_point(field_get:Proto10100001.account)
  return account_.GetNoArena();
}
inline void Proto10100001::set_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto10100001.account)
}
#if LANG_CXX11
inline void Proto10100001::set_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto10100001.account)
}
#endif
inline void Proto10100001::set_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto10100001.account)
}
inline void Proto10100001::set_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto10100001.account)
}
inline ::std::string* Proto10100001::mutable_account() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:Proto10100001.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto10100001::release_account() {
  // @@protoc_insertion_point(field_release:Proto10100001.account)
  if (!has_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto10100001::set_allocated_account(::std::string* account) {
  if (account != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:Proto10100001.account)
}

// optional string tick = 2;
inline bool Proto10100001::has_tick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto10100001::clear_tick() {
  tick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Proto10100001::tick() const {
  // @@protoc_insertion_point(field_get:Proto10100001.tick)
  return tick_.GetNoArena();
}
inline void Proto10100001::set_tick(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  tick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto10100001.tick)
}
#if LANG_CXX11
inline void Proto10100001::set_tick(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  tick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto10100001.tick)
}
#endif
inline void Proto10100001::set_tick(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  tick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto10100001.tick)
}
inline void Proto10100001::set_tick(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  tick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto10100001.tick)
}
inline ::std::string* Proto10100001::mutable_tick() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:Proto10100001.tick)
  return tick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto10100001::release_tick() {
  // @@protoc_insertion_point(field_release:Proto10100001.tick)
  if (!has_tick()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return tick_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto10100001::set_allocated_tick(::std::string* tick) {
  if (tick != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  tick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tick);
  // @@protoc_insertion_point(field_set_allocated:Proto10100001.tick)
}

// optional string session = 3;
inline bool Proto10100001::has_session() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto10100001::clear_session() {
  session_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& Proto10100001::session() const {
  // @@protoc_insertion_point(field_get:Proto10100001.session)
  return session_.GetNoArena();
}
inline void Proto10100001::set_session(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto10100001.session)
}
#if LANG_CXX11
inline void Proto10100001::set_session(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  session_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto10100001.session)
}
#endif
inline void Proto10100001::set_session(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto10100001.session)
}
inline void Proto10100001::set_session(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto10100001.session)
}
inline ::std::string* Proto10100001::mutable_session() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:Proto10100001.session)
  return session_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto10100001::release_session() {
  // @@protoc_insertion_point(field_release:Proto10100001.session)
  if (!has_session()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return session_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto10100001::set_allocated_session(::std::string* session) {
  if (session != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  session_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session);
  // @@protoc_insertion_point(field_set_allocated:Proto10100001.session)
}

// optional string server_flag = 4;
inline bool Proto10100001::has_server_flag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto10100001::clear_server_flag() {
  server_flag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& Proto10100001::server_flag() const {
  // @@protoc_insertion_point(field_get:Proto10100001.server_flag)
  return server_flag_.GetNoArena();
}
inline void Proto10100001::set_server_flag(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  server_flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto10100001.server_flag)
}
#if LANG_CXX11
inline void Proto10100001::set_server_flag(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  server_flag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto10100001.server_flag)
}
#endif
inline void Proto10100001::set_server_flag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  server_flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto10100001.server_flag)
}
inline void Proto10100001::set_server_flag(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  server_flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto10100001.server_flag)
}
inline ::std::string* Proto10100001::mutable_server_flag() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:Proto10100001.server_flag)
  return server_flag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto10100001::release_server_flag() {
  // @@protoc_insertion_point(field_release:Proto10100001.server_flag)
  if (!has_server_flag()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return server_flag_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto10100001::set_allocated_server_flag(::std::string* server_flag) {
  if (server_flag != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  server_flag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_flag);
  // @@protoc_insertion_point(field_set_allocated:Proto10100001.server_flag)
}

// optional string server_name = 5;
inline bool Proto10100001::has_server_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto10100001::clear_server_name() {
  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::std::string& Proto10100001::server_name() const {
  // @@protoc_insertion_point(field_get:Proto10100001.server_name)
  return server_name_.GetNoArena();
}
inline void Proto10100001::set_server_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto10100001.server_name)
}
#if LANG_CXX11
inline void Proto10100001::set_server_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  server_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto10100001.server_name)
}
#endif
inline void Proto10100001::set_server_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto10100001.server_name)
}
inline void Proto10100001::set_server_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto10100001.server_name)
}
inline ::std::string* Proto10100001::mutable_server_name() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:Proto10100001.server_name)
  return server_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto10100001::release_server_name() {
  // @@protoc_insertion_point(field_release:Proto10100001.server_name)
  if (!has_server_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return server_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto10100001::set_allocated_server_name(::std::string* server_name) {
  if (server_name != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  server_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_name);
  // @@protoc_insertion_point(field_set_allocated:Proto10100001.server_name)
}

// optional string agent = 6;
inline bool Proto10100001::has_agent() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto10100001::clear_agent() {
  agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::std::string& Proto10100001::agent() const {
  // @@protoc_insertion_point(field_get:Proto10100001.agent)
  return agent_.GetNoArena();
}
inline void Proto10100001::set_agent(const ::std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto10100001.agent)
}
#if LANG_CXX11
inline void Proto10100001::set_agent(::std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  agent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto10100001.agent)
}
#endif
inline void Proto10100001::set_agent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto10100001.agent)
}
inline void Proto10100001::set_agent(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto10100001.agent)
}
inline ::std::string* Proto10100001::mutable_agent() {
  _has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:Proto10100001.agent)
  return agent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto10100001::release_agent() {
  // @@protoc_insertion_point(field_release:Proto10100001.agent)
  if (!has_agent()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return agent_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto10100001::set_allocated_agent(::std::string* agent) {
  if (agent != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  agent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent);
  // @@protoc_insertion_point(field_set_allocated:Proto10100001.agent)
}

// optional int32 market = 7;
inline bool Proto10100001::has_market() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Proto10100001::clear_market() {
  market_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::int32 Proto10100001::market() const {
  // @@protoc_insertion_point(field_get:Proto10100001.market)
  return market_;
}
inline void Proto10100001::set_market(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  market_ = value;
  // @@protoc_insertion_point(field_set:Proto10100001.market)
}

// optional string net_type = 8;
inline bool Proto10100001::has_net_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Proto10100001::clear_net_type() {
  net_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::std::string& Proto10100001::net_type() const {
  // @@protoc_insertion_point(field_get:Proto10100001.net_type)
  return net_type_.GetNoArena();
}
inline void Proto10100001::set_net_type(const ::std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  net_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto10100001.net_type)
}
#if LANG_CXX11
inline void Proto10100001::set_net_type(::std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  net_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto10100001.net_type)
}
#endif
inline void Proto10100001::set_net_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  net_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto10100001.net_type)
}
inline void Proto10100001::set_net_type(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  net_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto10100001.net_type)
}
inline ::std::string* Proto10100001::mutable_net_type() {
  _has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_mutable:Proto10100001.net_type)
  return net_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto10100001::release_net_type() {
  // @@protoc_insertion_point(field_release:Proto10100001.net_type)
  if (!has_net_type()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return net_type_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto10100001::set_allocated_net_type(::std::string* net_type) {
  if (net_type != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  net_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), net_type);
  // @@protoc_insertion_point(field_set_allocated:Proto10100001.net_type)
}

// optional string sys_version = 9;
inline bool Proto10100001::has_sys_version() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Proto10100001::clear_sys_version() {
  sys_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000080u;
}
inline const ::std::string& Proto10100001::sys_version() const {
  // @@protoc_insertion_point(field_get:Proto10100001.sys_version)
  return sys_version_.GetNoArena();
}
inline void Proto10100001::set_sys_version(const ::std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  sys_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto10100001.sys_version)
}
#if LANG_CXX11
inline void Proto10100001::set_sys_version(::std::string&& value) {
  _has_bits_[0] |= 0x00000080u;
  sys_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto10100001.sys_version)
}
#endif
inline void Proto10100001::set_sys_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000080u;
  sys_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto10100001.sys_version)
}
inline void Proto10100001::set_sys_version(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000080u;
  sys_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto10100001.sys_version)
}
inline ::std::string* Proto10100001::mutable_sys_version() {
  _has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_mutable:Proto10100001.sys_version)
  return sys_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto10100001::release_sys_version() {
  // @@protoc_insertion_point(field_release:Proto10100001.sys_version)
  if (!has_sys_version()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  return sys_version_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto10100001::set_allocated_sys_version(::std::string* sys_version) {
  if (sys_version != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  sys_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sys_version);
  // @@protoc_insertion_point(field_set_allocated:Proto10100001.sys_version)
}

// optional string sys_model = 10;
inline bool Proto10100001::has_sys_model() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Proto10100001::clear_sys_model() {
  sys_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000100u;
}
inline const ::std::string& Proto10100001::sys_model() const {
  // @@protoc_insertion_point(field_get:Proto10100001.sys_model)
  return sys_model_.GetNoArena();
}
inline void Proto10100001::set_sys_model(const ::std::string& value) {
  _has_bits_[0] |= 0x00000100u;
  sys_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto10100001.sys_model)
}
#if LANG_CXX11
inline void Proto10100001::set_sys_model(::std::string&& value) {
  _has_bits_[0] |= 0x00000100u;
  sys_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto10100001.sys_model)
}
#endif
inline void Proto10100001::set_sys_model(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000100u;
  sys_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto10100001.sys_model)
}
inline void Proto10100001::set_sys_model(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000100u;
  sys_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto10100001.sys_model)
}
inline ::std::string* Proto10100001::mutable_sys_model() {
  _has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_mutable:Proto10100001.sys_model)
  return sys_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto10100001::release_sys_model() {
  // @@protoc_insertion_point(field_release:Proto10100001.sys_model)
  if (!has_sys_model()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000100u;
  return sys_model_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto10100001::set_allocated_sys_model(::std::string* sys_model) {
  if (sys_model != nullptr) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  sys_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sys_model);
  // @@protoc_insertion_point(field_set_allocated:Proto10100001.sys_model)
}

// optional string mac = 11;
inline bool Proto10100001::has_mac() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Proto10100001::clear_mac() {
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000200u;
}
inline const ::std::string& Proto10100001::mac() const {
  // @@protoc_insertion_point(field_get:Proto10100001.mac)
  return mac_.GetNoArena();
}
inline void Proto10100001::set_mac(const ::std::string& value) {
  _has_bits_[0] |= 0x00000200u;
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto10100001.mac)
}
#if LANG_CXX11
inline void Proto10100001::set_mac(::std::string&& value) {
  _has_bits_[0] |= 0x00000200u;
  mac_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto10100001.mac)
}
#endif
inline void Proto10100001::set_mac(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000200u;
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto10100001.mac)
}
inline void Proto10100001::set_mac(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000200u;
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto10100001.mac)
}
inline ::std::string* Proto10100001::mutable_mac() {
  _has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_mutable:Proto10100001.mac)
  return mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto10100001::release_mac() {
  // @@protoc_insertion_point(field_release:Proto10100001.mac)
  if (!has_mac()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000200u;
  return mac_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto10100001::set_allocated_mac(::std::string* mac) {
  if (mac != nullptr) {
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac);
  // @@protoc_insertion_point(field_set_allocated:Proto10100001.mac)
}

// optional int32 client_type = 12;
inline bool Proto10100001::has_client_type() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Proto10100001::clear_client_type() {
  client_type_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::int32 Proto10100001::client_type() const {
  // @@protoc_insertion_point(field_get:Proto10100001.client_type)
  return client_type_;
}
inline void Proto10100001::set_client_type(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00002000u;
  client_type_ = value;
  // @@protoc_insertion_point(field_set:Proto10100001.client_type)
}

// optional string sdk_sid = 13;
inline bool Proto10100001::has_sdk_sid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Proto10100001::clear_sdk_sid() {
  sdk_sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000400u;
}
inline const ::std::string& Proto10100001::sdk_sid() const {
  // @@protoc_insertion_point(field_get:Proto10100001.sdk_sid)
  return sdk_sid_.GetNoArena();
}
inline void Proto10100001::set_sdk_sid(const ::std::string& value) {
  _has_bits_[0] |= 0x00000400u;
  sdk_sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto10100001.sdk_sid)
}
#if LANG_CXX11
inline void Proto10100001::set_sdk_sid(::std::string&& value) {
  _has_bits_[0] |= 0x00000400u;
  sdk_sid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto10100001.sdk_sid)
}
#endif
inline void Proto10100001::set_sdk_sid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000400u;
  sdk_sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto10100001.sdk_sid)
}
inline void Proto10100001::set_sdk_sid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000400u;
  sdk_sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto10100001.sdk_sid)
}
inline ::std::string* Proto10100001::mutable_sdk_sid() {
  _has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_mutable:Proto10100001.sdk_sid)
  return sdk_sid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto10100001::release_sdk_sid() {
  // @@protoc_insertion_point(field_release:Proto10100001.sdk_sid)
  if (!has_sdk_sid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000400u;
  return sdk_sid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto10100001::set_allocated_sdk_sid(::std::string* sdk_sid) {
  if (sdk_sid != nullptr) {
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  sdk_sid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdk_sid);
  // @@protoc_insertion_point(field_set_allocated:Proto10100001.sdk_sid)
}

// optional string msg_tocken = 14;
inline bool Proto10100001::has_msg_tocken() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Proto10100001::clear_msg_tocken() {
  msg_tocken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000800u;
}
inline const ::std::string& Proto10100001::msg_tocken() const {
  // @@protoc_insertion_point(field_get:Proto10100001.msg_tocken)
  return msg_tocken_.GetNoArena();
}
inline void Proto10100001::set_msg_tocken(const ::std::string& value) {
  _has_bits_[0] |= 0x00000800u;
  msg_tocken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto10100001.msg_tocken)
}
#if LANG_CXX11
inline void Proto10100001::set_msg_tocken(::std::string&& value) {
  _has_bits_[0] |= 0x00000800u;
  msg_tocken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto10100001.msg_tocken)
}
#endif
inline void Proto10100001::set_msg_tocken(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000800u;
  msg_tocken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto10100001.msg_tocken)
}
inline void Proto10100001::set_msg_tocken(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000800u;
  msg_tocken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto10100001.msg_tocken)
}
inline ::std::string* Proto10100001::mutable_msg_tocken() {
  _has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_mutable:Proto10100001.msg_tocken)
  return msg_tocken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto10100001::release_msg_tocken() {
  // @@protoc_insertion_point(field_release:Proto10100001.msg_tocken)
  if (!has_msg_tocken()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000800u;
  return msg_tocken_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto10100001::set_allocated_msg_tocken(::std::string* msg_tocken) {
  if (msg_tocken != nullptr) {
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  msg_tocken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_tocken);
  // @@protoc_insertion_point(field_set_allocated:Proto10100001.msg_tocken)
}

// -------------------------------------------------------------------

// Proto50100001

// repeated .ProtoGateRole role_list = 1;
inline int Proto50100001::role_list_size() const {
  return role_list_.size();
}
inline ::ProtoGateRole* Proto50100001::mutable_role_list(int index) {
  // @@protoc_insertion_point(field_mutable:Proto50100001.role_list)
  return role_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoGateRole >*
Proto50100001::mutable_role_list() {
  // @@protoc_insertion_point(field_mutable_list:Proto50100001.role_list)
  return &role_list_;
}
inline const ::ProtoGateRole& Proto50100001::role_list(int index) const {
  // @@protoc_insertion_point(field_get:Proto50100001.role_list)
  return role_list_.Get(index);
}
inline ::ProtoGateRole* Proto50100001::add_role_list() {
  // @@protoc_insertion_point(field_add:Proto50100001.role_list)
  return role_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoGateRole >&
Proto50100001::role_list() const {
  // @@protoc_insertion_point(field_list:Proto50100001.role_list)
  return role_list_;
}

// -------------------------------------------------------------------

// Proto10100002

// optional int32 sex = 1;
inline bool Proto10100002::has_sex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto10100002::clear_sex() {
  sex_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 Proto10100002::sex() const {
  // @@protoc_insertion_point(field_get:Proto10100002.sex)
  return sex_;
}
inline void Proto10100002::set_sex(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  sex_ = value;
  // @@protoc_insertion_point(field_set:Proto10100002.sex)
}

// -------------------------------------------------------------------

// Proto50100002

// optional string name = 1;
inline bool Proto50100002::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto50100002::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Proto50100002::name() const {
  // @@protoc_insertion_point(field_get:Proto50100002.name)
  return name_.GetNoArena();
}
inline void Proto50100002::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto50100002.name)
}
#if LANG_CXX11
inline void Proto50100002::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto50100002.name)
}
#endif
inline void Proto50100002::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto50100002.name)
}
inline void Proto50100002::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto50100002.name)
}
inline ::std::string* Proto50100002::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:Proto50100002.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto50100002::release_name() {
  // @@protoc_insertion_point(field_release:Proto50100002.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto50100002::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Proto50100002.name)
}

// -------------------------------------------------------------------

// Proto10100003

// optional string name = 1;
inline bool Proto10100003::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto10100003::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Proto10100003::name() const {
  // @@protoc_insertion_point(field_get:Proto10100003.name)
  return name_.GetNoArena();
}
inline void Proto10100003::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto10100003.name)
}
#if LANG_CXX11
inline void Proto10100003::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto10100003.name)
}
#endif
inline void Proto10100003::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto10100003.name)
}
inline void Proto10100003::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto10100003.name)
}
inline ::std::string* Proto10100003::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:Proto10100003.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto10100003::release_name() {
  // @@protoc_insertion_point(field_release:Proto10100003.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto10100003::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Proto10100003.name)
}

// optional int32 sex = 2;
inline bool Proto10100003::has_sex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto10100003::clear_sex() {
  sex_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 Proto10100003::sex() const {
  // @@protoc_insertion_point(field_get:Proto10100003.sex)
  return sex_;
}
inline void Proto10100003::set_sex(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  sex_ = value;
  // @@protoc_insertion_point(field_set:Proto10100003.sex)
}

// optional int32 career = 3;
inline bool Proto10100003::has_career() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto10100003::clear_career() {
  career_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 Proto10100003::career() const {
  // @@protoc_insertion_point(field_get:Proto10100003.career)
  return career_;
}
inline void Proto10100003::set_career(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  career_ = value;
  // @@protoc_insertion_point(field_set:Proto10100003.career)
}

// -------------------------------------------------------------------

// Proto50100003

// optional int64 role_id = 1;
inline bool Proto50100003::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto50100003::clear_role_id() {
  role_id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int64 Proto50100003::role_id() const {
  // @@protoc_insertion_point(field_get:Proto50100003.role_id)
  return role_id_;
}
inline void Proto50100003::set_role_id(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Proto50100003.role_id)
}

// optional string role_name = 2;
inline bool Proto50100003::has_role_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto50100003::clear_role_name() {
  role_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Proto50100003::role_name() const {
  // @@protoc_insertion_point(field_get:Proto50100003.role_name)
  return role_name_.GetNoArena();
}
inline void Proto50100003::set_role_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  role_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto50100003.role_name)
}
#if LANG_CXX11
inline void Proto50100003::set_role_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  role_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto50100003.role_name)
}
#endif
inline void Proto50100003::set_role_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  role_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto50100003.role_name)
}
inline void Proto50100003::set_role_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  role_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto50100003.role_name)
}
inline ::std::string* Proto50100003::mutable_role_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:Proto50100003.role_name)
  return role_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto50100003::release_role_name() {
  // @@protoc_insertion_point(field_release:Proto50100003.role_name)
  if (!has_role_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return role_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto50100003::set_allocated_role_name(::std::string* role_name) {
  if (role_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  role_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role_name);
  // @@protoc_insertion_point(field_set_allocated:Proto50100003.role_name)
}

// -------------------------------------------------------------------

// Proto10100004

// optional int64 role_id = 1;
inline bool Proto10100004::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto10100004::clear_role_id() {
  role_id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int64 Proto10100004::role_id() const {
  // @@protoc_insertion_point(field_get:Proto10100004.role_id)
  return role_id_;
}
inline void Proto10100004::set_role_id(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Proto10100004.role_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_ProtoClient_5f10100_2eproto
